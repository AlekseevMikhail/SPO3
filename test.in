
// builtins
char read();
write(char c);
write_str(string str);
int[] new_int_array(ulong size);
ulong get_int_array_size(int[] array);

byte ord(char c);
char chr(byte c);

char digit_to_char(byte d) {
    if (d == 0) '0';
    else if (d == 1) '1';
    else if (d == 2) '2';
    else if (d == 3) '3';
    else if (d == 4) '4';
    else if (d == 5) '5';
    else if (d == 6) '6';
    else if (d == 7) '7';
    else if (d == 8) '8';
    else if (d == 9) '9';
    else ' ';
}

write_ulong(ulong value) {
    if (value == 0) {
        write_str("0");
        break;
    }

    if (value / 10 != 0) {
        write_ulong(value / 10);
    }

    write(digit_to_char(0 + value % 10));
}

write_long(long value) {
    if (value < 0) {
        write('-');
        value = -value;
    }

    ulong z = 0;
    write_ulong(z + value);
}

ulong read_ulong() {
    ulong result = 0;

    while (true) {
        byte c = ord(read());

        ulong d;
        if (c >= ord('0') && c <= ord('9')) {
            d = c - ord('0');
        } else {
            break;
        }

        result = result * 10 + d;
    }

    result;
}
